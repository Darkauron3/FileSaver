<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>